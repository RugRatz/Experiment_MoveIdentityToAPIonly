using System.Data.Entity;
using HE.Domain;

namespace HE.API.DbContexts
{
    public partial class HE_DbContext : DbContext
    {
        public HE_DbContext()
            : base("name=HE_DbContext")
        {
            Database.SetInitializer(new HE_DbContextInitializer());
        }

        public virtual DbSet<CustomerContactInfo> CustomerContactInfoes { get; set; }
        public virtual DbSet<Grocery> Groceries { get; set; }
        public virtual DbSet<GroceryGroup> GroceryGroups { get; set; }
        public virtual DbSet<GroceryGroupIngredient> GroceryGroupIngredients { get; set; }
        public virtual DbSet<HomemadeItem> HomemadeItems { get; set; }
        public virtual DbSet<Ingredient> Ingredients { get; set; }
        public virtual DbSet<IngredientCategory> IngredientCategories { get; set; }
        public virtual DbSet<IngredientNote> IngredientNotes { get; set; }
        public virtual DbSet<Instruction> Instructions { get; set; }
        public virtual DbSet<MealType> MealTypes { get; set; }
        public virtual DbSet<vCustomer> vCustomers { get; set; }
        public virtual DbSet<vGrocery> vGroceries { get; set; }
        public virtual DbSet<vHomemadeItem> vHomemadeItems { get; set; }
        public virtual DbSet<vIngredient> vIngredients { get; set; }
        public virtual DbSet<vIngredientNote> vIngredientNotes { get; set; }
        public virtual DbSet<vRecipeInstruction> vRecipeInstructions { get; set; }

        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            //this is generated by Microsoft EF that specifies the relationships between tables
            //modelBuilder.Entity<CustomerProfile>()
            //    .HasMany(e => e.Roles)
            //    .WithMany(e => e.CustomerProfiles)
            //    .Map(m => m.ToTable("UserRole").MapLeftKey("CustomerProfileID").MapRightKey("RoleId"));
        }

        public static HE_DbContext Create()
        {
            return new HE_DbContext();
        }
    }
}
